syntax = "proto3";

package api.login.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "login/api/login/v1;v1";
option java_multiple_files = true;
option java_package = "api.login.v1";

service Login {
	rpc ListUser (ListUserReq) returns (ListUserReply) {
		option (google.api.http) = {
			get: "/v1/user"
		};
	}



	rpc GetUser (GetUserReq) returns (GetUserReply) {
		option (google.api.http) = {
			get: "/v1/user/{id}"
		};
	}

	rpc UpdateUser (UpdateUserReq) returns (UpdateUserReply) {
		option (google.api.http) = {
			post: "/v1/user"
			body: "*"
		};
	}
	rpc DeleteUser (DeleteUserReq) returns (DeleteUserReply) {
		option (google.api.http) = {
			delete: "/v1/user/Users/{id}"
		};
	}

	rpc Register (RegisterReq) returns (RegisterReply) {
		option (google.api.http) = {
			post: "/v1/user/register"
			body: "*"
		};
	}
	rpc Login (LoginReq) returns (LoginReply) {
		option (google.api.http) = {
			post: "/v1/user/login"
			body: "*"
		};
	}
	rpc Logout (LogoutReq) returns (LogoutReply) {
		option (google.api.http) = {
			post: "/admin/v1/logout"
			body: "*"
		};
	}

}


message ListUserReq {
	int64 uid = 1;
	int64 page_num = 2;
	int64 page_size = 3;
}

message ListUserReply {
	message User {
		int64 id = 1;
		int64 user_id = 2;
		string name = 3;
	}
	repeated User Users = 1;
}



message GetUserReq {
	//    int64 id = 1;
	int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message GetUserReply {
	int64 id = 1;
	int64 user_id = 2;
	string name = 3;
}

message UpdateUserReq {
	int64 id = 1;
	int64 user_id = 2;
	string name = 3;
}

message UpdateUserReply {
	int64 id = 1;
	int64 user_id = 2;
	string name = 3;
}
message DeleteUserReq {
	int64 id = 1;
}

message DeleteUserReply {
	bool ok = 1;
}

message RegisterReq {
	string username = 1;
	string password = 2;
}

message RegisterReply {
	int64 id = 1;
	string username = 2;
}


message LoginReq {
	string username = 1;
	string password = 2;
}

message LoginReply {
	string token = 1;
}

message LogoutReq {

}

message LogoutReply {

}
